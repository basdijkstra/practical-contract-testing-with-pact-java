name: Build and test

on:
  push:
    branches:
      - main
      - answers
  pull_request:

concurrency:
  # For pull requests, cancel all currently-running jobs for this workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_BASE_URL }}
  PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}

jobs:

  cdct-with-pact-ci-exercises:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout GitHub repository
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # TODO: Uncomment and complete the step that runs the
      #   contract generation tests for the customer-consumer
      # The working directory is ./customer-consumer
      # The command you need to use is the same as you used to
      #   run tests locally: 'mvn clean test'

      - name: Run customer-consumer tests
        working-directory: ./customer-consumer
        run: mvn clean test

      # TODO: Uncomment and complete the step that publishes the
      # generated contract to the Pact Broker. Use the
      # pactflow/actions/publish-pact-files@v2 GitHub Action to do so.
      #
      # The pactfiles are in ./customer-consumer/target/pacts
      # The PACT_BROKER_BASE_URL and PACT_BROKER_TOKEN should be defined as
      # repository secrets in your repository. See the documentation linked to
      # in the video transcripts for detailed instructions on how to do that.

      - name: Publish customer-consumer contract
        uses: pactflow/actions/publish-pact-files@v2
        with:
          pactfiles: ./customer-consumer/target/pacts
          version: 1.0.0-customer-${{ github.sha }}
          broker_url: ${{ env.PACT_BROKER_BASE_URL }}
          token: ${{ env.PACT_BROKER_TOKEN }}

      # TODO: Uncomment and complete the step that run the provider verification tests.
      # Use the same command you used to run the tests locally.

      - name: Provider contract verification
        run: mvn clean "-Dpact.verifier.publishResults=true" "-Dpact.provider.version=1.0.0-address-${{ github.sha }}" test

      # TODO: push the updates to your repository and check the GitHub Actions output

      # TODO: check your Pact Broker to see if the contract is published correctly, and
      #   if the contract has been successfully verified by the provider